/// <reference types="node" />
import { MAVLinkMessage } from "./mavlink-message";
import { EventEmitter } from 'events';
export declare class MAVLinkModule extends EventEmitter {
    private messageRegistry;
    private system_id;
    readonly protocol_version: number;
    private packer;
    private parser;
    private _protocol_version;
    constructor(messageRegistry: Array<[number, new (system_id: number, component_id: number) => MAVLinkMessage]>, system_id?: number, auto_negotiate?: boolean);
    registerMessages(messageRegistry: Array<[number, new (system_id: number, component_id: number) => MAVLinkMessage]>): void;
    pack(messages: MAVLinkMessage[]): Buffer;
    parse(bytes: Buffer): Promise<MAVLinkMessage[]>;
    upgradeLink(): void;
    downgradeLink(): void;
    private auto_negotiate;
}
//# sourceMappingURL=mavlink-module.d.ts.map