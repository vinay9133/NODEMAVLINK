/// <reference types="node" />
export declare function readUInt64LE(buffer: Buffer, offset: number): number;
export declare function readInt64LE(buffer: Buffer, offset: number): number;
export declare function writeInt64LE(buffer: Buffer, value: number, offset: number): void;
export declare function writeUInt64LE(buffer: Buffer, value: number, offset: number): void;
export interface IMAVLinkMessage {
    _system_id: number;
    _component_id: number;
    _message_id: number;
    _message_name: string;
    _message_fields: [string, string, boolean][];
    _payload_length: number;
    _crc_extra: number;
    _extension_length: number;
    sizeof(type: string): number;
}
export interface IIndexable {
    [key: string]: any;
}
export declare abstract class MAVLinkMessage implements IMAVLinkMessage, IIndexable {
    _system_id: number;
    _component_id: number;
    constructor(_system_id: number, _component_id: number);
    abstract _message_name: string;
    abstract _message_id: number;
    abstract _message_fields: [string, string, boolean][];
    abstract _crc_extra: number;
    readonly _payload_length: number;
    readonly _extension_length: number;
    [key: string]: any;
    sizeof(type: string): number;
    x25CRC(bytes: Buffer): number;
}
//# sourceMappingURL=mavlink-message.d.ts.map